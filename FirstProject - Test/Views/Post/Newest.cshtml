@using FirstProjectRepository.UsefullModels;
@using FirstProject___Test.Helpful;
@{
    ViewData["Title"] = "Newest";
}
@{
    int postNumber = 1;
}



@model List<PostWithUsername>




    <h1>Newests Posts</h1>
<ul class="list-group">
    @foreach (var post in Model)
    {

        <li class="list-group-item d-flex justify-content-between align-items-center">
            <div>
                @if (!string.IsNullOrEmpty(post.url))
                {
                    <span>@postNumber.</span> <a href="@post.url" class="h5"><strong>@post.title</strong></a>
                }
                else
                {
                    <span>@postNumber. <a href="#" class="h5"><strong>@post.title</strong></a></span>
                }
                <br />
                @if (User.Identity.IsAuthenticated)
                {
                    <span>Score: </span>
                    <span id="votes_@post.postId">@post.votecount</span>
                    <a href="#" class="upvote-btn" data-post-id="@post.postId" style="text-decoration: none;">☝️</a>


                    <a href="#" class="downvote-btn" data-post-id="@post.postId" style="text-decoration: none;">👇</a>
                    <span>by @post.username posted @TimeHelper.TimeAgo(post.createdAt)</span>
                }
                else
                {
                    <span>Score: </span>
                    <span id="votes_@post.postId">@post.votecount</span>
                    <span>☝️ by @post.username posted @TimeHelper.TimeAgo(post.createdAt)</span>
                }
            </div>
            <div>
                <span>
                    <a href="@Url.Action("ViewPost", "Post", new { id = post.postId })" class="badge bg-light" style="text-decoration: none;">
                        @post.number_of_comments comments
                    </a>
                </span>
                @if (User.Identity.IsAuthenticated && post.userToken == ViewBag.CurrentUserToken)
                {
                    <a href="@Url.Action("Edit", "Post", new { id = post.postId })" class="btn btn-sm btn-secondary ml-2">Edit</a>
                    <a href="@Url.Action("Delete", "Post", new { id = post.postId })" class="btn btn-sm btn-danger ml-2">Delete</a>
                }
            </div>
        </li>
        postNumber++;
    }
</ul>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        // JavaScript file

        // Function to handle voting
        function votePost(postId, voteType) {
            $.ajax({
                url: '/Post/' + voteType + 'vote',
                method: 'POST',
                data: { postId: postId },
                success: function (data) {
                    updateVoteCount(postId, data.votecount);
                },
                error: function () {
                    console.log('An error occurred during voting.');
                }
            });
        }

        // Function to update vote count
        function updateVoteCount(postId, voteCount) {
            $('#votes_' + postId).text(voteCount);
        }

        // Event listener for upvote
        $('.upvote-btn').on('click', function () {
            var postId = $(this).data('post-id');
            votePost(postId, 'up');
        });

        // Event listener for downvote
        $('.downvote-btn').on('click', function () {
            var postId = $(this).data('post-id');
            votePost(postId, 'down');
        });

    </script>
}
